
import java.io.*;
import java.util.Scanner;

public class entireAddressBook {
	private ContactInfo[] friends; // An array of Contacts - each stores info for one friend
    private int numfriends; // Number of friends currently in AddressBook

    // Create an empty AddressBook
    public entireAddressBook() {
		friends = new ContactInfo[10];
		numfriends = 0;
    }

    // Add a contact that's passed in as a parameter.
    public void addContact(ContactInfo c) {
		friends[numfriends] = c;
		numfriends++;
    }

    // Print out info on all contacts using method Contact class.
    public void printContacts() {
		for (int i=0;i<numfriends;i++)
	    	friends[i].printContact();
    }

    // Returns the number of friends currently in AddressBook
    public int numContacts() {
		return numfriends;
    }

    // Returns a non-neg integer if a Contact with name s exists corresponding
    // to which place in the array friends the Contact is stored. Returns -1
    // otherwise.
    private int haveContact(String s) {
	
		for (int i=0;i<numfriends;i++)
	    	if (friends[i].getEmail().equals(s))
				return i;
		return -1;
    }

    // Deletes a contact with name s, if one is in the AddressBook.
    public void deleteContact(String s) {
	
		int place = haveContact(s);
		if (place >= 0) {
	    	friends[place] = friends[numfriends-1];
	    	numfriends--;
		}
    }

    public static void main(String[] args) throws IOException {

	
		Scanner input = new Scanner(System.in);
	
		// Instantiate AddressBook object
		entireAddressBook blackbook = new entireAddressBook();

 		// Menu driven loop.
		menu();
		int choice = input.nextInt();
	
	
		while (choice!=5) {
	    
	    	// Only adds contact if there is room in AddressBook blackbook.
	    	if (choice == 1) {
			
				
		    
		    		//Reads in all appropriate information.");
		    		System.out.println("Enter first name:");
		    		String firstName = input.next();
		    		System.out.println("Enter last name.");
		    		String lastName = input.next();
		    		System.out.println("Enter their phone number.");
		    		long phoneNumber = input.nextInt();
		    		System.out.println("Enter email");
		    		String email = input.next();
		    		

		    		// Uses information to create Contact object, which is
		    		// a parameter to the addContact method.
		    		blackbook.addContact(new ContactInfo(firstName, lastName, phoneNumber, email));
				
				
	    	}
	    	
	    	// Implements rest of the choices by calling appropriate AddressBook methods on blackbook.
	    	else if (choice == 2) {
				System.out.println("What is the email of the contact you want to delete?");
				String name = input.next();
				blackbook.deleteContact(name);
	    	}
	    	else if (choice == 3) {
				System.out.println('\n' + "Searching for entry");
	    	}
	    	else if (choice == 4) {
				blackbook.printContacts();
	    	}
	    	else if (choice == 5) {
	    		System.out.println('\n' + "Deleting Book");
	    	
	    
	    	menu();
	    	choice = input.nextInt();
		}
	}

    }

    public static void menu() {
		System.out.println("1.)'\n' + Add an Entry");
		System.out.println("2.)'\n' + Remove an Entry");
		System.out.println("3.)'\n' + Search for a specific entry");
		System.out.println("4.)'\n' + Print Address Book");
		System.out.println("5.)'\n' + Delete Book");
		System.out.println("6.)'\n' + Quit");
		System.out.print("'\n' + Please choose what you'd like to do with the database:");
	}
}
